# handlers/checklist.py

from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.error import BadRequest

from utils.storage import user_progress


STATUS_ICONS = {
    None: "‚¨ú",       # –Ω–µ –æ—Ç–º–µ—á–µ–Ω–æ
    "done": "‚úÖ",    # –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
    "skipped": "‚ùå", # –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
    "ignored": "‚ö†Ô∏è"  # –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ
}

def next_status(current):
    order = [None, "done", "skipped", "ignored"]
    idx = order.index(current)
    return order[(idx + 1) % len(order)]



async def send_checklist(bot, ck_id: str):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —á–µ–∫-–ª–∏—Å—Ç–æ–º –≤ –æ–±—â–µ–º —á–∞—Ç–µ.
    """
    

    data = user_progress[ck_id]
    chat_id = data["chat_id"]
    message_id = data["message_id"]

    # –°—Ç—Ä–æ–∏–º –∫–Ω–æ–ø–∫–∏
    keyboard = []
    for idx, text in enumerate(data["items"]):
        icon = STATUS_ICONS[data["status"][idx]]
        cb = f"toggle|{ck_id}|{idx}"
        keyboard.append([InlineKeyboardButton(f"{icon} {text}", callback_data=cb)])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞
    keyboard.append([
        InlineKeyboardButton("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç", callback_data=f"report|{ck_id}")
    ])

    try:
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="üìù *–ß–µ–∫-–ª–∏—Å—Ç*",
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest as e:
        if "Message is not modified" not in str(e):
            raise

async def toggle_handler(update, context):
    from utils.storage import user_progress

    query = update.callback_query
    await query.answer()
    _, ck_id, idx_str = query.data.split("|")
    idx = int(idx_str)

    # –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
    data = user_progress[ck_id]
    data["status"][idx] = next_status(data["status"][idx])

    # –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    await send_checklist(context.bot, ck_id)