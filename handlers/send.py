# handlers/send.py

import json
from uuid import uuid4
from datetime import datetime

from telegram import Update
from telegram.ext import ContextTypes, CommandHandler

from utils.storage import CHECKLISTS, DYNAMIC, user_progress
from config.config import REPORT_CHAT_IDS, DYNAMIC_FILE
from handlers.checklist import send_checklist

async def send_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /send <–Ω–∞–∑–≤–∞–Ω–∏–µ_—á–µ–∫–ª–∏—Å—Ç–∞>
    –ò—â–µ—Ç —à–∞–±–ª–æ–Ω –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —á–µ–∫-–ª–∏—Å—Ç–∞—Ö –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞,
    –ø—É–±–ª–∏–∫—É–µ—Ç –µ–≥–æ –æ–¥–∏–Ω —Ä–∞–∑ –∏ –¥–µ–ª–∞–µ—Ç –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —á–µ–∫-–ª–∏—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º.
    """
    chat_id = update.effective_chat.id
    args = context.args  # —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã

    # 1) –ü—Ä–æ–≤–µ—Ä–∫–∞: —É–∫–∞–∑–∞–Ω –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç
    if not args:
        return await update.message.reply_text(
            "‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /send <–Ω–∞–∑–≤–∞–Ω–∏–µ_—á–µ–∫–ª–∏—Å—Ç–∞>\n"
            "–ü—Ä–∏–º–µ—Ä: /send –û—Ç–∫—Ä—ã—Ç–∏–µ"
        )

    # 2) –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –¥–ª—è –∫–∞–∫–æ–π ¬´—á–∞–π–Ω–æ–π¬ª —ç—Ç–æ—Ç —á–∞—Ç
    place = None
    for p, cid in REPORT_CHAT_IDS.items():
        if cid == chat_id:
            place = p
            break
    if not place:
        return await update.message.reply_text(
            "‚ùó –≠—Ç–æ—Ç —á–∞—Ç –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫-–ª–∏—Å—Ç–æ–≤."
        )

    # 3) –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–µ–∫-–ª–∏—Å—Ç–∞
    title = " ".join(args)

    # 4) –ò—â–µ–º –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–∞—Ö
    items = CHECKLISTS.get(place, {}).get(title)
    prefix = "static"
    tpl_id = title

    # 5) –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ ‚Äî –∏—â–µ–º –≤ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –ø–æ title
    if items is None:
        dyn = next(
            (d for d in DYNAMIC if d["place"] == place and d["title"] == title),
            None
        )
        if dyn:
            items = dyn["items"]
            prefix = "dynamic"
            tpl_id = dyn["id"]

            # 5a) –ï—Å–ª–∏ —ç—Ç–æ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —á–µ–∫-–ª–∏—Å—Ç ‚Äî —É–¥–∞–ª—è–µ–º –µ–≥–æ
            if dyn.get("one_time"):
                DYNAMIC.remove(dyn)
                with open(DYNAMIC_FILE, "w", encoding="utf-8") as f:
                    json.dump(DYNAMIC, f, ensure_ascii=False, indent=2)

    # 6) –ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
    if items is None:
        return await update.message.reply_text(
            f"‚ùó –ß–µ–∫-–ª–∏—Å—Ç ¬´{title}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è ¬´{place}¬ª."
        )

    # 7) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —á–µ–∫-–ª–∏—Å—Ç–∞
    ck_id = uuid4().hex[:8]
    context.user_data["ck_id"] = ck_id
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    user_progress[ck_id] = {
        "place": place,
        "user": update.effective_user.full_name,
        "title": title,
        "timestamp": timestamp,
        "items": items,
        "status": [None] * len(items),
        "chat_id": chat_id,
        "message_id": None,
    }

    # 8) –ü—É–±–ª–∏–∫—É–µ–º –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    intro = (
        f"üü¢ –ß–µ–∫-–ª–∏—Å—Ç *{title}* –∑–∞–ø—É—â–µ–Ω!\n"
        f"–ù–∞—á–∞–ª–æ: {user_progress[ck_id]['timestamp']}\n\n"
        """"
–ù–∞–∂–∏–º–∞—è, –æ—Ç–º–µ—á–∞–π—Ç–µ üçÉ —Ç–æ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤.

–í—Ç–æ—Ä–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–±–ª–µ–º—ã/–Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ ‚ö†Ô∏è.

–¢—Ä–µ—Ç—å–∏–º –Ω–∞–∂–∞—Ç–∏–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ—Ç–º–µ—Ç–∫—É ‚ÅâÔ∏è, –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —á—Ç–æ-—Ç–æ –º–µ—à–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é.

–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –≤–µ—Ä–Ω—ë—Ç –ø—É–Ω–∫—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ¬´–Ω–µ –æ—Ç–º–µ—á–µ–Ω–æ¬ª.

–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —á–µ–∫-–ª–∏—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É ¬´üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç¬ª –≤ –∫–æ–Ω—Ü–µ —Å–ø–∏—Å–∫–∞.
"""
    )
    sent = await update.message.reply_text(intro, parse_mode="Markdown")
    user_progress[ck_id]["message_id"] = sent.message_id

    # 9) –†–∏—Å—É–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç (–∫–Ω–æ–ø–∫–∏)
    await send_checklist(context.bot, ck_id)


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä –≤ bot.py —Ç–∞–∫:
# app.add_handler(CommandHandler("send", send_handler))
